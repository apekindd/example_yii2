<?php

namespace app\models;

use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "exam_date".
 *
 * @property integer $id
 * @property double $price
 * @property string $date
 * @property string $registration_to
 * @property integer $close
 * @property integer $exam_item_id
 * @property integer $duration
 *
 * @property ExamItem $examItem
 */
class ExamDate extends \yii\db\ActiveRecord
{

    public function beforeSave($insert)
    {

        $this->date = strtotime($this->date);
        $this->registration_to = strtotime($this->registration_to);

        return parent::beforeSave($insert);
    }

    public function afterFind()
    {
        $this->date = date("d.m.Y H:i", $this->date);
        $this->registration_to = date("d.m.Y", $this->registration_to);
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'exam_date';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['price', 'exam_item_id', 'duration'], 'required'],
            [['price'], 'number'],
            [['close', 'exam_item_id', 'duration'], 'integer'],
            [['date', 'registration_to'], 'string'],
            [['exam_item_id'], 'exist', 'skipOnError' => true, 'targetClass' => ExamItem::className(), 'targetAttribute' => ['exam_item_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'price' => 'Цена',
            'date' => 'Дата и время начала экзамена',
            'registration_to' => 'Регистрация до(включительно)',
            'close' => 'Запись на экзамен',
            'exam_item_id' => 'Экзамен',
            'duration' => 'Продолжительность(минут)',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getExamItem()
    {
        return $this->hasOne(ExamItem::className(), ['id' => 'exam_item_id']);
    }

    public function getExams(){
        return ArrayHelper::map(ExamItem::find()->asArray()->all(), 'id', 'name');
    }
}
